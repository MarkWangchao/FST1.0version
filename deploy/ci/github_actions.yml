name: Trading Platform CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'development'
        type: choice
        options:
          - development
          - staging
          - production

jobs:
  test:
    name: Test and Lint
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          cache: 'pip'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-dev.txt
          
      - name: Lint with flake8
        run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
          
      - name: Check formatting with black
        run: |
          black --check .
          
      - name: Run tests
        run: |
          pytest --cov=. --cov-report=xml --junitxml=test-results.xml tests/
          
      - name: Upload test results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: test-results
          path: test-results.xml
          
      - name: Upload coverage report
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          fail_ci_if_error: false
  
  build:
    name: Build Docker Image
    needs: test
    runs-on: ubuntu-latest
    if: ${{ github.event_name != 'pull_request' }}
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.DOCKER_REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          
      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ secrets.DOCKER_REGISTRY }}/trading-platform
          tags: |
            type=ref,event=branch
            type=sha,format=short
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' }}
            
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./deploy/docker/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=${{ secrets.DOCKER_REGISTRY }}/trading-platform:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKER_REGISTRY }}/trading-platform:buildcache,mode=max
  
  deploy-development:
    name: Deploy to Development
    needs: build
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/develop' || (github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'development') }}
    environment: development
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        
      - name: Set up Kustomize
        uses: imranismail/setup-kustomize@v2
        
      - name: Configure Kubernetes credentials
        uses: azure/k8s-set-context@v3
        with:
          kubeconfig: ${{ secrets.KUBE_CONFIG_DEV }}
          
      - name: Update Kubernetes manifests
        run: |
          IMAGE_TAG=$(echo ${{ github.sha }} | cut -c1-7)
          sed -i "s|{{IMAGE_TAG}}|${IMAGE_TAG}|g" deploy/kubernetes/deployment.yaml
          
      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f deploy/kubernetes/configmap.yaml -n trading-platform-dev
          kubectl apply -f deploy/kubernetes/service.yaml -n trading-platform-dev
          kubectl apply -f deploy/kubernetes/deployment.yaml -n trading-platform-dev
          
      - name: Verify deployment
        run: |
          kubectl rollout status deployment/trading-platform -n trading-platform-dev --timeout=180s
  
  deploy-staging:
    name: Deploy to Staging
    needs: build
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/main' || (github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'staging') }}
    environment: staging
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        
      - name: Configure Kubernetes credentials
        uses: azure/k8s-set-context@v3
        with:
          kubeconfig: ${{ secrets.KUBE_CONFIG_STAGING }}
          
      - name: Update Kubernetes manifests
        run: |
          IMAGE_TAG=$(echo ${{ github.sha }} | cut -c1-7)
          sed -i "s|{{IMAGE_TAG}}|${IMAGE_TAG}|g" deploy/kubernetes/deployment.yaml
          
      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f deploy/kubernetes/configmap.yaml -n trading-platform-staging
          kubectl apply -f deploy/kubernetes/service.yaml -n trading-platform-staging
          kubectl apply -f deploy/kubernetes/deployment.yaml -n trading-platform-staging
          
      - name: Verify deployment
        run: |
          kubectl rollout status deployment/trading-platform -n trading-platform-staging --timeout=180s
  
  deploy-production:
    name: Deploy to Production
    needs: deploy-staging
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'production' }}
    environment: 
      name: production
      url: https://trading-platform.example.com
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        
      - name: Configure Kubernetes credentials
        uses: azure/k8s-set-context@v3
        with:
          kubeconfig: ${{ secrets.KUBE_CONFIG_PROD }}
          
      - name: Update Kubernetes manifests
        run: |
          IMAGE_TAG=$(echo ${{ github.sha }} | cut -c1-7)
          sed -i "s|{{IMAGE_TAG}}|${IMAGE_TAG}|g" deploy/kubernetes/deployment.yaml
          
      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f deploy/kubernetes/configmap.yaml -n trading-platform-prod
          kubectl apply -f deploy/kubernetes/service.yaml -n trading-platform-prod
          kubectl apply -f deploy/kubernetes/deployment.yaml -n trading-platform-prod
          
      - name: Verify deployment
        run: |
          kubectl rollout status deployment/trading-platform -n trading-platform-prod --timeout=300s
          
      - name: Run smoke tests
        run: |
          echo "Running smoke tests against production environment..."
          # Add smoke test commands here